from enum import Enum
from datetime import datetime, timezone
from enum import Enum
from typing import Dict, List, Optional, Type, Union

from pydantic import BaseModel, Field

__all__ = [
    'Tables',
    'TableModel',
    'AgentTableModel',
    'UserTableModel',
    'RoomTableModel',
    'MessageTableModel'
]

class Tables(Enum):
    """Tables available in the database."""

    AGENTS = "agents"
    AGENTS__id = "id"
    AGENTS__first_message = "first_message"
    AGENTS__bird_channel_id = "bird_channel_id"
    AGENTS__telegram_chat_id = "telegram_chat_id"

    USERS = "users"
    USERS__id = "id"
    USERS__created_at = "created_at"
    USERS__phone_number = "phone_number"
    USERS__telegram_uid = "telegram_uid"
    USERS__birthday = "birthday"

    ROOMS = "rooms"
    ROOMS__id = "id"
    ROOMS__created_at = "created_at"
    ROOMS__user_id = "user_id"
    ROOMS__agent_id = "agent_id"

    MESSAGES = "messages"
    MESSAGES__id = "id"
    MESSAGES__room_id = "room_id"
    MESSAGES__created_at = "created_at"
    MESSAGES__from_user = "from_user"
    MESSAGES__message = "message"


def utc_now():
    return datetime.now(timezone.utc).strftime("%Y-%m-%dT%H:%M:%S.%f")[:-3] + "Z"


class AgentTableModel(BaseModel):
    id: Optional[int | str] = Field(
        default=None, description="Auto-generated by database"
    )
    first_message: Optional[str] = Field(default='null')
    telegram_chat_id: Optional[str] = Field(default='null')
    bird_channel_id: Optional[str] = Field(default='null')


class UserTableModel(BaseModel):
    id: Optional[int | str] = Field(
        default=None, description="Auto-generated by database"
    )
    created_at: datetime = Field(default_factory=utc_now)
    phone_number: Optional[str] = Field(default='null')
    # birthday: Optional[datetime] = Field(default='null)
    telegram_uid: Optional[str] = Field(default='null')


class RoomTableModel(BaseModel):
    id: Optional[int | str] = Field(
        default=None, description="Auto-generated by database"
    )
    created_at: datetime = Field(default_factory=utc_now)
    user_id: int = Field(default='null')
    agent_id: int = Field(default='null')


class MessageTableModel(BaseModel):
    id: Optional[int | str] = Field(
        default=None, description="Auto-generated by database"
    )
    room_id: int = Field(default='null')
    created_at: datetime = Field(default_factory=utc_now)
    from_user: bool = Field(default='null')
    message: str = Field(default='null')


TableModel = Union[UserTableModel, AgentTableModel, MessageTableModel, RoomTableModel]
TABLE_MODEL_MAP = {
    Tables.USERS.value: UserTableModel,
    Tables.ROOMS.value: RoomTableModel,
    Tables.AGENTS.value: AgentTableModel,
    Tables.MESSAGES.value: MessageTableModel,
}

AgentTableModel = AgentTableModel()
UserTableModel = UserTableModel()
RoomTableModel = RoomTableModel()
MessageTableModel = MessageTableModel()
